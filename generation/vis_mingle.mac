# display applied commands on screen
/control/verbose 2

# add more menu items in GUI 
#/control/ifInteractive gui.mac

# construct detector geometry and physics processes
/run/initialize

# check overlapping in between detector volumes
/geometry/test/run
# list visualization setups for detector components
/vis/geometry/list

# print hierarchical structure of detector components
/vis/ASCIITree/verbose 13
/vis/drawTree

# X-ray imaging of detector components
#/vis/open RayTracer
# white transparent background
/vis/viewer/set/background 1 1 1 0
# view image from a good angle
/vis/viewer/set/viewpointThetaPhi 60 0
# pick a component (volume) to draw (world, by default)
/vis/drawVolume
# save image to g4RayTracer.*.jpeg
# it is commented out as it is time-consuming
/vis/viewer/refresh

# save detector geometry to g4_000?.prim
#/vis/open DAWNFILE
#/vis/drawVolume
#/vis/viewer/refresh

# shoot 2 MeV electrons to positive x direction
/gps/particle e-
/gps/energy 2 MeV
/gps/pos/centre -4 0 0 m
/gps/direction 1 0 0

# save detector geometry and particle tracks to g4_0?.wrl
/vis/open VRML2FILE
/vis/drawVolume
/vis/scene/add/trajectories
/vis/scene/endOfEventAction accumulate
/run/beamOn 10
/vis/viewer/flush

# save detector geometry and particle tracks to G4Data0.heprep
#/vis/open HepRepFile
#/vis/drawVolume
#/vis/scene/add/axes
#/vis/scene/add/trajectories
#/vis/scene/endOfEventAction accumulate
#/run/beamOn 10

# 1. Open the VTK file driver
#/vis/open DAWNFILE

# 2. Draw the detector geometry
#/vis/drawVolume

# 3. Add coordinate axes to the scene
#/vis/scene/add/axes

# 4. Add particle trajectories to the scene
#/vis/scene/add/trajectories

# 5. Configure how events are handled: keep drawings from previous events
#/vis/scene/endOfEventAction accumulate

# 6. Run the simulation for 10 events (this triggers the visualization)
#/run/beamOn 10
